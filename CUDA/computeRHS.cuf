subroutine computeRHS(msh)
  use code_types
  use pde
  use bases
  implicit none
  !
  type(mesh), intent(inout) :: msh
  integer :: i,j,k,e1,e2,index1,index2,index3
  real*8 :: ql,qr,flx,qtmp,qvals(msh%nshp),dqvals(msh%nshp),vol,w(msh%nshp)
  integer, save :: iout=0
  !
  ! this is p0 implementation for
  ! single field
  !
  ! rhs = (msh%nfields,msh%nshp,msh%nelem)
  msh%rhs=0d0
  !
  do i = 1,msh%nelem
    e1=msh%face((i-1)*2+1)
    e2=msh%face((i-1)*2+2)

    index1 = (i-1)*msh%nshp
    ! Only look at interior mesh elements, save fringes for later
    if(minval(msh%iblank((i-1)*2+1:(i-1)*2+2)).eq.1) then 
      ! Calculate the volume integrals
      do j = 1,msh%ngauss
        call shapefunction(msh%nshp,msh%xgauss(j),[-0.5d0,0.5d0],msh%q(index1+1),qvals,dqvals)
        qtmp = SUM(qvals)
        do k = 1,msh%nshp
           index2 = (j-1)*msh%nshp + k
           call volint(qtmp,vol)
           vol = vol*msh%dshp(index2)*msh%wgauss(j)
           msh%rhs(index1+k) = msh%rhs(index1+k) + vol 
        enddo 
      enddo
      !
      ! Calculate the fluxes within current mesh
      if (e1.ne.e2) then
        ! Left flux boundary       
        qvals = 1d0
        ! XXX check these shapefunction calls are working
        call shapefunction(msh%nshp,-0.5d0,[-0.5d0,0.5d0],qvals,w,dqvals)
        call shapefunction(msh%nshp,msh%xe((e1-1)*2+2),msh%xe(2*(e1-1)+1),msh%q(msh%nshp*(e1-1)+1),qvals,dqvals)
        ql = sum(qvals)
        call shapefunction(msh%nshp,msh%xe((i-1)*2+1), msh%xe(2*(i-1)+1), msh%q(index1+1),qvals,dqvals)
        qr = sum(qvals)
        call flux(ql,qr,flx)
        do j = 1,msh%nshp
            index2 = msh%nshp*(i-1)+j
            msh%rhs(index2) = msh%rhs(index2) + w(j)*flx
        enddo
        
        ! Right flux boundary
        qvals = 1d0
        call shapefunction(msh%nshp,0.5d0,[-0.5d0,0.5d0],qvals,w,dqvals)
        call shapefunction(msh%nshp,msh%xe(2*(i-1)+2),msh%xe((i-1)*2+1),msh%q(index1+1),qvals,dqvals)
        ql = sum(qvals)
        call shapefunction(msh%nshp,msh%xe(2*(e2-1)+1),msh%xe(2*(e2-1)+1),msh%q(msh%nshp*(e2-1)+1),qvals,dqvals)
        qr = sum(qvals)
        call flux(ql,qr,flx)
        do j = 1,msh%nshp
            index2 = msh%nshp*(i-1)+j
            msh%rhs(index2) = msh%rhs(index2) - w(j)*flx
        enddo
      endif ! e1 ne e2
    endif ! iblank 

  enddo
  !
  !iout=iout+1
  !do i=1,msh%nelem
  ! write(30+iout,*) msh%rhs(1,1,i),msh%iblank(msh%e2n(1,i)),&
  !                  msh%iblank(msh%e2n(2,i))
  !enddo
end subroutine computeRHS
     
     
